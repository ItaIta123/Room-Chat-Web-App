{"ast":null,"code":"var _jsxFileName = \"/Users/itamarfayler/Computer Science/Live_Chat_App/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\"; // for retrieving data from url\n\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"test chat\");\nlet socket; // helper function to get url parameters\n\nconst useQuery = () => {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n};\n\n_s(useQuery, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\n\nconst Chat = location => {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const ENDPOINT = \"localhost:5001\";\n\n  _s2(useEffect(_s2(() => {\n    _s2();\n\n    // getting dat from url\n    let query = useQuery();\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    console.log(location);\n    setName(name);\n    setRoom(room); // firing up socket\n\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    });\n    console.log(name, room);\n  }, \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n    return [useQuery];\n  }), [ENDPOINT, location.search]), \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n    return [useQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"CHat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n\n_s3(Chat, \"203TxQTUYg89M2b+P3tV/3Gl3zA=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/itamarfayler/Computer Science/Live_Chat_App/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","useLocation","console","log","socket","useQuery","search","useMemo","URLSearchParams","Chat","location","name","setName","room","setRoom","ENDPOINT","query","parse","emit"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AACxC,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,YAAP;;AAEAC,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,IAAIC,MAAJ,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAaL,WAAW,EAA9B;AAEA,SAAOL,KAAK,CAACW,OAAN,CAAc,MAAM,IAAIC,eAAJ,CAAoBF,MAApB,CAApB,EAAiD,CAACA,MAAD,CAAjD,CAAP;AACD,CAJH;;GAAMD,Q;UACiBJ,W;;;AAKvB,MAAMQ,IAAI,GAAIC,QAAD,IAAc;AAAA;;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMkB,QAAQ,GAAG,gBAAjB;;AAEA,MAAAjB,SAAS,KAAC,MAAM;AAAA;;AACd;AACA,QAAIkB,KAAK,GAAGX,QAAQ,EAApB;AAEA,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBd,WAAW,CAACkB,KAAZ,CAAkBP,QAAQ,CAACJ,MAA3B,CAAvB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACAE,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CAPc,CASd;;AACAT,IAAAA,MAAM,GAAGJ,EAAE,CAACe,QAAD,CAAX;AACAX,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEP,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ,EAAkBE,IAAlB;AACD,GAbQ;AAAA,YAEKR,QAFL;AAAA,MAaN,CAACU,QAAD,EAAWL,QAAQ,CAACJ,MAApB,CAbM,CAAT;AAAA,YAEcD,QAFd;AAAA;;AAcA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBD;;IAAMI,I;;KAAAA,I;AAsBN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\"; // for retrieving data from url\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router-dom\";\n\nimport \"./Chat.css\";\n\nconsole.log(\"test chat\");\nlet socket;\n\n// helper function to get url parameters\nconst useQuery = () => {\n    const { search } = useLocation();\n  \n    return React.useMemo(() => new URLSearchParams(search), [search]);\n  }\n\nconst Chat = (location) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const ENDPOINT = \"localhost:5001\";\n\n  useEffect(() => {\n    // getting dat from url\n    let query = useQuery();\n   \n    const { name, room } = queryString.parse(location.search);\n    console.log(location);\n    setName(name);\n    setRoom(room);\n\n    // firing up socket\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", { name, room });\n    console.log(name, room);\n  }, [ENDPOINT, location.search]);\n  return <h1>CHat</h1>;\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}