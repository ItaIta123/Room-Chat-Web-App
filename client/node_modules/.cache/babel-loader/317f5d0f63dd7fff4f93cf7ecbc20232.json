{"ast":null,"code":"var _jsxFileName = \"/Users/itamarfayler/Computer Science/Live_Chat_App/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string'; // for retrieving data from url\n\nimport io from 'socket.io-client';\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"test chat\");\nlet socket;\n\nconst Chat = location => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const ENDPOINT = \"localhost:5001\";\n  useEffect(() => {\n    // getting dat from url\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    console.log(location);\n    setName(name);\n    setRoom(room); // firing up socket\n\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    });\n    console.log(\"emmited from front\");\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"CHat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Chat, \"d0IL40A6in8C0M9kpYxzMuyI8u0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/itamarfayler/Computer Science/Live_Chat_App/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","console","log","socket","Chat","location","name","setName","room","setRoom","ENDPOINT","parse","search","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AACxC,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;;AAEAC,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,IAAIC,MAAJ;;AACA,MAAMC,IAAI,GAAIC,QAAD,IAAc;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMa,QAAQ,GAAG,gBAAjB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAM;AAACQ,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeT,WAAW,CAACY,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAArB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAE,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CALY,CAOZ;;AACAL,IAAAA,MAAM,GAAGH,EAAE,CAACU,QAAD,CAAX;AACAP,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ,EAAoB;AAACP,MAAAA,IAAD;AAAOE,MAAAA;AAAP,KAApB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAGH,GAbQ,EAaN,CAACQ,QAAD,EAAWL,QAAQ,CAACO,MAApB,CAbM,CAAT;AAcA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAEH,CArBD;;GAAMR,I;;KAAAA,I;AAuBN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport queryString from 'query-string'; // for retrieving data from url\nimport io from 'socket.io-client';\n\nimport \"./Chat.css\";\n\nconsole.log(\"test chat\");\nlet socket;\nconst Chat = (location) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const ENDPOINT = \"localhost:5001\";\n\n    useEffect(() => {\n        // getting dat from url\n        const {name, room} = queryString.parse(location.search);\n        console.log(location);\n        setName(name);\n        setRoom(room);\n\n        // firing up socket\n        socket = io(ENDPOINT);\n        socket.emit(\"join\", {name, room});\n        console.log(\"emmited from front\");\n\n\n    }, [ENDPOINT, location.search])\n    return (<h1>CHat</h1>);\n\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}