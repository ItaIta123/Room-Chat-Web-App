{"ast":null,"code":"var _jsxFileName = \"/Users/itamarfayler/Computer Science/Live_Chat_App/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\"; // for retrieving data from url\n\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"test chat\");\nlet socket; // helper function to get url parameters\n\nconst useQuery = () => {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n};\n\n_s(useQuery, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\n\nlet query = useQuery();\n\nconst Chat = location => {\n  _s2();\n\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const ENDPOINT = \"localhost:5001\";\n  useEffect(() => {\n    // getting dat from url\n    const {\n      name\n    } = query.get(\"name\");\n    console.log(location);\n    setName(name);\n    setRoom(room); // firing up socket\n\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    });\n    console.log(name, room);\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"CHat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(Chat, \"203TxQTUYg89M2b+P3tV/3Gl3zA=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/itamarfayler/Computer Science/Live_Chat_App/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","useLocation","console","log","socket","useQuery","search","useMemo","URLSearchParams","query","Chat","location","name","setName","room","setRoom","ENDPOINT","get","emit"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AACxC,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,YAAP;;AAEAC,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,IAAIC,MAAJ,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAaL,WAAW,EAA9B;AAEA,SAAOL,KAAK,CAACW,OAAN,CAAc,MAAM,IAAIC,eAAJ,CAAoBF,MAApB,CAApB,EAAiD,CAACA,MAAD,CAAjD,CAAP;AACD,CAJD;;GAAMD,Q;UACeJ,W;;;AAKrB,IAAIQ,KAAK,GAAGJ,QAAQ,EAApB;;AAGA,MAAMK,IAAI,GAAIC,QAAD,IAAc;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMmB,QAAQ,GAAG,gBAAjB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAM;AAAEc,MAAAA;AAAF,QAAWH,KAAK,CAACQ,GAAN,CAAU,MAAV,CAAjB;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACAE,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CALc,CAOd;;AACAV,IAAAA,MAAM,GAAGJ,EAAE,CAACgB,QAAD,CAAX;AACAZ,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEN,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ,EAAkBE,IAAlB;AACD,GAXQ,EAWN,CAACE,QAAD,EAAWL,QAAQ,CAACL,MAApB,CAXM,CAAT;AAYA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;IAAMI,I;;KAAAA,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\"; // for retrieving data from url\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router-dom\";\n\nimport \"./Chat.css\";\n\nconsole.log(\"test chat\");\nlet socket;\n\n// helper function to get url parameters\nconst useQuery = () => {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n};\n\nlet query = useQuery();\n\n\nconst Chat = (location) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const ENDPOINT = \"localhost:5001\";\n\n  useEffect(() => {\n    // getting dat from url\n    const { name } = query.get(\"name\");\n    console.log(location);\n    setName(name);\n    setRoom(room);\n\n    // firing up socket\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", { name, room });\n    console.log(name, room);\n  }, [ENDPOINT, location.search]);\n  return <h1>CHat</h1>;\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}