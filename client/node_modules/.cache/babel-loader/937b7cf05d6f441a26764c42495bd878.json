{"ast":null,"code":"var _jsxFileName = \"/Users/itamarfayler/Computer Science/Live_Chat_App/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\"; // for retrieving data from url\n\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"test chat\");\nlet socket; // helper function to get url parameters\n\nconst useQuery = () => {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n};\n\n_s(useQuery, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\n\nconst Chat = location => {\n  _s2();\n\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messagesArray, setMessagesArray] = useState([]);\n  const ENDPOINT = \"localhost:5001\";\n  let query = useQuery();\n  useEffect(() => {\n    // getting dat from url\n    const name = query.get(\"name\");\n    const room = query.get(\"room\");\n    setName(name);\n    setRoom(room); // firing up socket\n\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, () => {}); // on dismounting of the Chat component (user leaves the page)\n\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => {\n          setMessage(e.target.value);\n        },\n        onKeyPress: e => {\n          e.key === \"Enter\" ? send_message(e) : null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Chat, \"GOPGTXJwVU8M1P5NxtHnlhVKcEs=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/itamarfayler/Computer Science/Live_Chat_App/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","useLocation","console","log","socket","useQuery","search","useMemo","URLSearchParams","Chat","location","name","setName","room","setRoom","message","setMessage","messagesArray","setMessagesArray","ENDPOINT","query","get","emit","off","e","target","value","key","send_message"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AACxC,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,YAAP;;AAEAC,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,IAAIC,MAAJ,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAaL,WAAW,EAA9B;AAEA,SAAOL,KAAK,CAACW,OAAN,CAAc,MAAM,IAAIC,eAAJ,CAAoBF,MAApB,CAApB,EAAiD,CAACA,MAAD,CAAjD,CAAP;AACD,CAJD;;GAAMD,Q;UACeJ,W;;;AAKrB,MAAMQ,IAAI,GAAIC,QAAD,IAAc;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMsB,QAAQ,GAAG,gBAAjB;AACA,MAAIC,KAAK,GAAGf,QAAQ,EAApB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMa,IAAI,GAAGS,KAAK,CAACC,GAAN,CAAU,MAAV,CAAb;AACA,UAAMR,IAAI,GAAGO,KAAK,CAACC,GAAN,CAAU,MAAV,CAAb;AAEAT,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CANc,CAQd;;AACAT,IAAAA,MAAM,GAAGJ,EAAE,CAACmB,QAAD,CAAX;AACAf,IAAAA,MAAM,CAACkB,IAAP,CAAY,MAAZ,EAAoB;AAAEX,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoC,MAAM,CAAE,CAA5C,EAVc,CAYd;;AACA,WAAO,MAAM;AACXT,MAAAA,MAAM,CAACkB,IAAP,CAAY,YAAZ;AACAlB,MAAAA,MAAM,CAACmB,GAAP;AACD,KAHD;AAID,GAjBQ,EAiBN,CAACJ,QAAD,EAAWC,KAAX,CAjBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AACE,QAAA,KAAK,EAAEL,OADT;AAEE,QAAA,QAAQ,EAAGS,CAAD,IAAO;AACfR,UAAAA,UAAU,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,SAJH;AAKE,QAAA,UAAU,EAAGF,CAAD,IAAO;AAACA,UAAAA,CAAC,CAACG,GAAF,KAAU,OAAV,GAAoBC,YAAY,CAACJ,CAAD,CAAhC,GAAsC,IAAtC;AAA2C;AALjE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxCD;;IAAMf,I;UAOQJ,Q;;;KAPRI,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\"; // for retrieving data from url\nimport io from \"socket.io-client\";\nimport { useLocation } from \"react-router-dom\";\n\nimport \"./Chat.css\";\n\nconsole.log(\"test chat\");\nlet socket;\n\n// helper function to get url parameters\nconst useQuery = () => {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n};\n\nconst Chat = (location) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messagesArray, setMessagesArray] = useState([]);\n\n  const ENDPOINT = \"localhost:5001\";\n  let query = useQuery();\n\n  useEffect(() => {\n    // getting dat from url\n    const name = query.get(\"name\");\n    const room = query.get(\"room\");\n\n    setName(name);\n    setRoom(room);\n\n    // firing up socket\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", { name, room }, () => {});\n\n    // on dismounting of the Chat component (user leaves the page)\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, query]);\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container\">\n        <input\n          value={message}\n          onChange={(e) => {\n            setMessage(e.target.value);\n          }}\n          onKeyPress={(e) => {e.key === \"Enter\" ? send_message(e) : null}}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}