{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string'; // for retrieving data from url\n\nimport io from 'socket.io-client';\nimport \"./Chat.css\";\nlet socket;\n\nconst Chat = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const ENDPOINT = \"localhost:5001\";\n  useEffect(() => {\n    // getting dat from url\n    const {\n      name,\n      room\n    } = queryString.parse(location.search); // firing up socket\n\n    socket = io(ENDPOINT);\n  }, [ENDPOINT, location.search]);\n};\n\n_s(Chat, \"d0IL40A6in8C0M9kpYxzMuyI8u0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/itamarfayler/Computer Science/Live_Chat_App/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","name","setName","room","setRoom","ENDPOINT","parse","location","search"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AACxC,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;AAGA,IAAIC,MAAJ;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMU,QAAQ,GAAG,gBAAjB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAM;AAACK,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeN,WAAW,CAACS,KAAZ,CAAkBC,QAAQ,CAACC,MAA3B,CAArB,CAFY,CAIZ;;AACAT,IAAAA,MAAM,GAAGD,EAAE,CAACO,QAAD,CAAX;AAEH,GAPQ,EAON,CAACA,QAAD,EAAWE,QAAQ,CAACC,MAApB,CAPM,CAAT;AASH,CAdD;;GAAMR,I;;KAAAA,I;AAgBN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport queryString from 'query-string'; // for retrieving data from url\nimport io from 'socket.io-client';\n\nimport \"./Chat.css\";\n\n\nlet socket;\nconst Chat = () => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const ENDPOINT = \"localhost:5001\";\n\n    useEffect(() => {\n        // getting dat from url\n        const {name, room} = queryString.parse(location.search);\n\n        // firing up socket\n        socket = io(ENDPOINT);\n\n    }, [ENDPOINT, location.search])\n\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}